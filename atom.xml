<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  
  <subtitle>取次花丛懒回顾</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-01-14T20:01:53.429Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>菜菜小狗</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode刷题-剑指Offer 09.用两个栈实现队列</title>
    <link href="http://example.com/2022/01/15/lc-JjianzhiOffer09/"/>
    <id>http://example.com/2022/01/15/lc-JjianzhiOffer09/</id>
    <published>2022-01-14T18:36:48.000Z</published>
    <updated>2022-01-14T20:01:53.429Z</updated>
    
    <content type="html"><![CDATA[<h4 id="题目："><a href="#题目：" class="headerlink" title="题目："></a><strong>题目</strong>：</h4><p>用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 appendTail 和 deleteHead ，分别完成在队列尾部插入整数和在队列头部删除整数的功能。(若队列中没有元素，deleteHead 操作返回 -1 )</p><span id="more"></span><p><strong>示例 1：</strong></p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：</span><br><span class="line">[<span class="string">&quot;CQueue&quot;</span>,<span class="string">&quot;appendTail&quot;</span>,<span class="string">&quot;deleteHead&quot;</span>,<span class="string">&quot;deleteHead&quot;</span>]</span><br><span class="line">[[],[<span class="number">3</span>],[],[]]</span><br><span class="line">输出：[null,null,<span class="number">3</span>,<span class="number">-1</span>]</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：</span><br><span class="line">[<span class="string">&quot;CQueue&quot;</span>,<span class="string">&quot;deleteHead&quot;</span>,<span class="string">&quot;appendTail&quot;</span>,<span class="string">&quot;appendTail&quot;</span>,<span class="string">&quot;deleteHead&quot;</span>,<span class="string">&quot;deleteHead&quot;</span>]</span><br><span class="line">[[],[],[<span class="number">5</span>],[<span class="number">2</span>],[],[]]</span><br><span class="line">输出：[null,<span class="number">-1</span>,null,null,<span class="number">5</span>,<span class="number">2</span>]</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>1 &lt;= values &lt;= 10000</code></li><li><code>最多会对 appendTail、deleteHead 进行 10000 次调用</code></li></ul><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof">https://leetcode-cn.com/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof</a></p><hr><h4 id="解题："><a href="#解题：" class="headerlink" title="解题："></a>解题：</h4><h5 id="分析题目："><a href="#分析题目：" class="headerlink" title="分析题目："></a>分析题目：</h5><p>用两个栈实现一个队列，即我们需要有两个栈stack1和stack2，要用这两个栈（后进先出）来实现一个队列（先进先出），也就是我们需要实现队列的两个函数 appendTail（插入队尾） 和 deleteHead（删除队首）。</p><ul><li>根据栈后进先出的特性，我们用stack1来进行插入操作，每次将数压入stack1，这样stack1的栈底元素即为第一个插入的数即队首，栈顶元素即为最后一个插入的数即队尾。</li><li>当要进行删除队首操作时，由于队首元素在栈底，所以我们需要将stack1中的数全部出栈并依次压入stack2中，试想一下，这样一来stack2就相当于存放着stack1的倒序，stack2的栈底元素就是原来stack1的栈顶元素即队尾，stack2的栈顶元素即队首，要进行删除队首操作时直接将stack2的栈顶元素弹出即可。</li></ul><h5 id="函数设计："><a href="#函数设计：" class="headerlink" title="函数设计："></a>函数设计：</h5><ul><li><p>appendTail( ):向队尾添加数</p><p>需要传入参数int value，返回值为null，将数压入stack1。</p></li><li><p>deleteHead() ：删除队首元素</p><p>不需要参数，返回值为队首元素，当队列为空时，返回值为-1。</p><ul><li>当stack2不为空，直接删除stack2的栈顶元素</li><li>当stack1、stack2都为空，返回-1</li><li>当stack2为空，stack1不为空，将stack1中的元素依次全部放入stack2中，再删除stack2的栈顶元素</li></ul></li></ul><h5 id="代码（Java实现）："><a href="#代码（Java实现）：" class="headerlink" title="代码（Java实现）："></a>代码（Java实现）：</h5><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> CQueue &#123;</span><br><span class="line">    LinkedList&lt;Integer&gt; stack1;</span><br><span class="line">LinkedList&lt;Integer&gt; stack2;</span><br><span class="line">    public <span class="constructor">CQueue()</span> &#123;</span><br><span class="line">         stack1=<span class="keyword">new</span> LinkedList&lt;Integer&gt;<span class="literal">()</span>;</span><br><span class="line">stack2=<span class="keyword">new</span> LinkedList&lt;Integer&gt;<span class="literal">()</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public void append<span class="constructor">Tail(<span class="params">int</span> <span class="params">value</span>)</span> &#123;       <span class="comment">//在队列尾部添加，返回值为null</span></span><br><span class="line">stack1.add<span class="constructor">Last(<span class="params">value</span>)</span>;                <span class="comment">//将元素压入stack1，即放到队尾   </span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public <span class="built_in">int</span> delete<span class="constructor">Head()</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(stack2.is<span class="constructor">Empty()</span>==<span class="literal">false</span>)&#123;     <span class="comment">//stack2不为空时</span></span><br><span class="line">return stack2.remove<span class="constructor">First()</span>; <span class="comment">//将stack2的栈顶元素删除,即删除队首</span></span><br><span class="line">&#125;</span><br><span class="line">                         <span class="comment">//走到这说明stack2为空</span></span><br><span class="line"><span class="keyword">if</span>(stack1.is<span class="constructor">Empty()</span>)&#123;   <span class="comment">//如果stack1也为空，说明队列没有数，deleteHead函数返回-1</span></span><br><span class="line">return -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">                        <span class="comment">//stack2为空，stack1不为空</span></span><br><span class="line"><span class="keyword">while</span>(stack1.is<span class="constructor">Empty()</span>==<span class="literal">false</span>)&#123;   <span class="comment">//将stack1中的元素按逆序压入stack2中</span></span><br><span class="line">stack2.add<span class="constructor">Last(<span class="params">stack1</span>.<span class="params">removeFirst</span>()</span>);</span><br><span class="line">&#125;</span><br><span class="line">return stack2.remove<span class="constructor">First()</span>;     <span class="comment">//删除stack2栈顶元素即队首元素</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;题目：&quot;&gt;&lt;a href=&quot;#题目：&quot; class=&quot;headerlink&quot; title=&quot;题目：&quot;&gt;&lt;/a&gt;&lt;strong&gt;题目&lt;/strong&gt;：&lt;/h4&gt;&lt;p&gt;用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 appendTail 和 deleteHead ，分别完成在队列尾部插入整数和在队列头部删除整数的功能。(若队列中没有元素，deleteHead 操作返回 -1 )&lt;/p&gt;</summary>
    
    
    
    <category term="LeetCode" scheme="http://example.com/categories/LeetCode/"/>
    
    <category term="剑指Offer" scheme="http://example.com/categories/LeetCode/%E5%89%91%E6%8C%87Offer/"/>
    
    <category term="栈" scheme="http://example.com/categories/LeetCode/%E5%89%91%E6%8C%87Offer/%E6%A0%88/"/>
    
    <category term="队列" scheme="http://example.com/categories/LeetCode/%E5%89%91%E6%8C%87Offer/%E6%A0%88/%E9%98%9F%E5%88%97/"/>
    
    <category term="Java" scheme="http://example.com/categories/LeetCode/%E5%89%91%E6%8C%87Offer/%E6%A0%88/%E9%98%9F%E5%88%97/Java/"/>
    
    
    <category term="LeetCode" scheme="http://example.com/tags/LeetCode/"/>
    
    <category term="剑指Offer" scheme="http://example.com/tags/%E5%89%91%E6%8C%87Offer/"/>
    
    <category term="栈" scheme="http://example.com/tags/%E6%A0%88/"/>
    
    <category term="队列" scheme="http://example.com/tags/%E9%98%9F%E5%88%97/"/>
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Hexo搭建个人博客并且部署到GitHub</title>
    <link href="http://example.com/2022/01/11/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%B9%B6%E4%B8%94%E9%83%A8%E7%BD%B2%E5%88%B0GitHub/"/>
    <id>http://example.com/2022/01/11/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%B9%B6%E4%B8%94%E9%83%A8%E7%BD%B2%E5%88%B0GitHub/</id>
    <published>2022-01-11T11:23:19.000Z</published>
    <updated>2022-01-13T13:06:41.508Z</updated>
    
    <content type="html"><![CDATA[<p>  在bilibili刷到程序羊的视频就一时兴起想做个自己的博客，期间遇到了数不清的问题，我一次次地查，一遍遍地尝试，差不多花了3天时间才完全搞好。记录一下整个过程的要点，后续应该还会一直更新~</p><span id="more"></span><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=483937795&auto=1&height=66"></iframe><h4 id="一、安装node-js"><a href="#一、安装node-js" class="headerlink" title="一、安装node.js"></a>一、安装node.js</h4><ul><li>下载地址：<a href="http://nodejs.cn/download/">http://nodejs.cn/download/</a> 傻瓜式安装</li></ul><p>简单的说 Node.js 就是运行在服务端的 JavaScript。</p><p>Node.js 是一个基于Chrome JavaScript 运行时建立的一个平台。</p><p>Node.js是一个事件驱动I/O服务端JavaScript环境，基于Google的V8引擎，V8引擎执</p><p>行Javascript的速度非常快，性能非常好。</p><hr><h4 id="二、注册github账号"><a href="#二、注册github账号" class="headerlink" title="二、注册github账号"></a>二、注册github账号</h4><ul><li>github官网：<a href="https://github.com/">https://github.com/</a></li></ul><hr><h4 id="三、安装Git"><a href="#三、安装Git" class="headerlink" title="三、安装Git"></a>三、安装Git</h4><p>Git是版本控制工具，用来将本地博客部署到github。Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。</p><h4 id="四、Git的一些重要配置"><a href="#四、Git的一些重要配置" class="headerlink" title="四、Git的一些重要配置"></a>四、Git的一些重要配置</h4><p>1.用户名和邮箱</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --<span class="keyword">global</span> user.name <span class="string">&quot;xxxxxxx&quot;</span>    <span class="meta">#github用户名</span></span><br><span class="line">git config --<span class="keyword">global</span> user.email <span class="string">&quot;xxxxx@xxxx&quot;</span>   <span class="meta">#注册githug的邮箱</span></span><br></pre></td></tr></table></figure><p>2.在github新建一个SSH公钥</p><p>3.生成SSH公钥并添加到你上一步新建的SSH公钥，实现免密码登录</p><ul><li>执行命令：<code>ssh-keygen -t rsa    #生成公钥</code></li><li>然后进入C:\Users\主机名\ .ssh目录，将文件id_rsa.pub里面的内容复制到你上一步新建的SSH公钥中</li></ul><hr><h4 id="五、安装Hexo"><a href="#五、安装Hexo" class="headerlink" title="五、安装Hexo"></a>五、安装Hexo</h4><p>Hexo官网：<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo-<span class="keyword">cli</span>   <span class="meta">#全局安装</span></span><br><span class="line">hexo -v   <span class="meta">#查看Hexo版本</span></span><br></pre></td></tr></table></figure><ul><li>官网页面滑到下方可以看到搭建Hexo博客需要用到的一些指令：<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install </span>hexo-cli -g</span><br><span class="line">hexo init <span class="keyword">blog</span></span><br><span class="line"><span class="keyword"></span>cd <span class="keyword">blog</span></span><br><span class="line"><span class="keyword"></span>npm <span class="keyword">install</span></span><br><span class="line"><span class="keyword"></span>hexo server</span><br></pre></td></tr></table></figure></li></ul><hr><h4 id="五、创建本地博客站点"><a href="#五、创建本地博客站点" class="headerlink" title="五、创建本地博客站点"></a>五、创建本地博客站点</h4><p>1.打开Git Bash，执行<code>cd d:</code>打开d盘（或其它盘）</p><p>2.初始化一个项目<br>  <code>hexo init  blog  #blog为文件名即项目名</code></p><p>3.<code>cd blog</code>进入blog项目目录</p><p>4.安装项目的依赖包 <code>npm install</code></p><p>5.执行<code>hexo cl</code>回车<code>hexo g</code>回车<code>hexo s</code>回车，此时访问<a href="http://localhost:4000/">http://localhost:4000/</a> 即可看到你的本地Hexo博客</p><hr><h4 id="六、Hexo项目搭建成功"><a href="#六、Hexo项目搭建成功" class="headerlink" title="六、Hexo项目搭建成功"></a>六、Hexo项目搭建成功</h4><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.deploy       <span class="comment"># 需要部署的文件 </span></span><br><span class="line">node_modules  <span class="comment"># 项目所有的依赖包和插件</span></span><br><span class="line">public        <span class="comment"># 生成的静态网页文件 </span></span><br><span class="line"><span class="keyword">scaffolds </span>    <span class="comment"># 文章模板</span></span><br><span class="line">source        <span class="comment"># 博客正文和其他源文件等都应该放在这里</span></span><br><span class="line">   _drafts   <span class="comment"># 草稿</span></span><br><span class="line">   _posts    <span class="comment"># 文章</span></span><br><span class="line">themes        <span class="comment"># 主题</span></span><br><span class="line">_<span class="built_in">config</span>.yml   <span class="comment"># 全局配置文件</span></span><br><span class="line">package.<span class="keyword">json </span> <span class="comment"># 项目依赖信息</span></span><br></pre></td></tr></table></figure><hr><h4 id="七、将项目部署到github"><a href="#七、将项目部署到github" class="headerlink" title="七、将项目部署到github"></a>七、将项目部署到github</h4><p>1.在github新建一个仓库，仓库名为你的用户名</p><p>2.修改本地项目中的_config.yml文件（可以下载Sublime打开），在文件末尾处修改：<br>  type：git<br>  repo：仓库URL地址（我的是 <a href="mailto:&#103;&#x69;&#x74;&#64;&#x67;&#105;&#116;&#x68;&#x75;&#98;&#46;&#99;&#111;&#109;">&#103;&#x69;&#x74;&#64;&#x67;&#105;&#116;&#x68;&#x75;&#98;&#46;&#99;&#111;&#109;</a>:cstianai/cstianai.github.io.git ）<br>  branch：master<br>  <img src="/2022/01/11/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%B9%B6%E4%B8%94%E9%83%A8%E7%BD%B2%E5%88%B0GitHub/1.png" alt="avatar"></p><p>3.执行</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo</span> cl  <span class="comment">#清除hexo缓存</span></span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br><span class="line">hexo d  <span class="comment">#上传到远程仓库</span></span><br></pre></td></tr></table></figure><hr><h4 id="八、修改博客主题"><a href="#八、修改博客主题" class="headerlink" title="八、修改博客主题"></a>八、修改博客主题</h4><p>Hexo官网主题：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p><p>1.下载主题放到项目的theme文件夹下</p><p>2.更改配置文件_config.yml：<br><code>theme：你下载的主题名</code></p><hr><h4 id="九、编辑Hexo博客"><a href="#九、编辑Hexo博客" class="headerlink" title="九、编辑Hexo博客"></a>九、编辑Hexo博客</h4><p>1.创建一个新的博客</p><p><code>hexo new &quot;博客标题&quot;</code></p><p>2.添加图片</p><ul><li><p>方法1：<code> &#123;% asset_img example.jpg This is an example image %&#125;</code></p></li><li><p>方法2：安装<code>npm install hexo-asset-image --save</code>，然后修改配置文件中的post_asset_folder为true，然后打开<code>/node_modules/hexo-asset-image/index.js</code>，将文件内容替换为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPosition</span>(<span class="params">str, m, i</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> version = <span class="built_in">String</span>(hexo.version).split(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">hexo.extend.filter.register(<span class="string">&#x27;after_post_render&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> config = hexo.config;</span><br><span class="line">  <span class="keyword">if</span>(config.post_asset_folder)&#123;</span><br><span class="line">        <span class="keyword">var</span> link = data.permalink;</span><br><span class="line">    <span class="keyword">if</span>(version.length &gt; <span class="number">0</span> &amp;&amp; <span class="built_in">Number</span>(version[<span class="number">0</span>]) == <span class="number">3</span>)</span><br><span class="line">       <span class="keyword">var</span> beginPos = getPosition(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">       <span class="keyword">var</span> beginPos = getPosition(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">3</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span></span><br><span class="line">    <span class="keyword">var</span> endPos = link.lastIndexOf(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>;</span><br><span class="line">    link = link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> toprocess = [<span class="string">&#x27;excerpt&#x27;</span>, <span class="string">&#x27;more&#x27;</span>, <span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">      <span class="keyword">var</span> key = toprocess[i];</span><br><span class="line"> </span><br><span class="line">      <span class="keyword">var</span> $ = cheerio.load(data[key], &#123;</span><br><span class="line">        <span class="attr">ignoreWhitespace</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">xmlMode</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">lowerCaseTags</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">decodeEntities</span>: <span class="literal">false</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&#x27;img&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($(<span class="built_in">this</span>).attr(<span class="string">&#x27;src&#x27;</span>))&#123;</span><br><span class="line">            <span class="comment">// For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.</span></span><br><span class="line">            <span class="keyword">var</span> src = $(<span class="built_in">this</span>).attr(<span class="string">&#x27;src&#x27;</span>).replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span>(!<span class="regexp">/http[s]*.*|\/\/.*/</span>.test(src) &amp;&amp;</span><br><span class="line">               !<span class="regexp">/^\s*\//</span>.test(src)) &#123;</span><br><span class="line">              <span class="comment">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span></span><br><span class="line">              <span class="comment">// In addition, to support multi-level local directory.</span></span><br><span class="line">              <span class="keyword">var</span> linkArray = link.split(<span class="string">&#x27;/&#x27;</span>).filter(<span class="function"><span class="keyword">function</span>(<span class="params">elem</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">              &#125;);</span><br><span class="line">              <span class="keyword">var</span> srcArray = src.split(<span class="string">&#x27;/&#x27;</span>).filter(<span class="function"><span class="keyword">function</span>(<span class="params">elem</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span> &amp;&amp; elem != <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">              &#125;);</span><br><span class="line">              <span class="keyword">if</span>(srcArray.length &gt; <span class="number">1</span>)</span><br><span class="line">                srcArray.shift();</span><br><span class="line">              src = srcArray.join(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">              $(<span class="built_in">this</span>).attr(<span class="string">&#x27;src&#x27;</span>, config.root + link + src);</span><br><span class="line">              <span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info(<span class="string">&quot;update link as:--&gt;&quot;</span>+config.root + link + src);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info(<span class="string">&quot;no src attr, skipped...&quot;</span>);</span><br><span class="line">            <span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info($(<span class="built_in">this</span>));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] = $.html();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>​</p></li><li><p>然后就可以用<code>! []()</code>来添加图片了</p></li></ul><p>3.Markdown快捷键</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">标题：<span class="variable">Ctrl</span><span class="operator">+</span><span class="number">1</span>、<span class="number">2</span>、<span class="number">3.</span><span class="operator">..</span>对应一、二、三<span class="operator">...</span>级标题（光标定位到需要设置为标题的行，按快捷键）</span><br><span class="line"></span><br><span class="line">加粗：<span class="variable">Ctrl</span><span class="operator">+</span><span class="variable">B</span>（选中要加粗的文本，按快捷键）</span><br><span class="line"></span><br><span class="line">斜体：<span class="variable">Ctrl</span><span class="operator">+</span><span class="built_in">I</span>（选中要设置斜体的文本，按快捷键）</span><br><span class="line"></span><br><span class="line">下划线：<span class="variable">Ctrl</span><span class="operator">+</span><span class="variable">U</span>（选中要加下划线的文本，按快捷键）</span><br><span class="line"></span><br><span class="line">删除线：<span class="variable">Alt</span><span class="operator">+</span><span class="variable">Shift</span><span class="operator">+</span><span class="number">5</span>（选中要加删除线的文本，按快捷键）</span><br><span class="line"></span><br><span class="line">代码片段：<span class="variable">Ctrl</span><span class="operator">+</span><span class="variable">Shift</span><span class="operator">+`</span>（选中要设置为代码片段的文本，按快捷键）</span><br><span class="line"></span><br><span class="line">代码块：<span class="variable">Ctrl</span><span class="operator">+</span><span class="variable">Shift</span><span class="operator">+</span><span class="built_in">K</span>（任意位置按快捷键，选择编程语言然后在代码块中输入代码）</span><br><span class="line"></span><br><span class="line">切换到下一行：<span class="variable">Ctrl</span><span class="operator">+</span><span class="built_in">Enter</span>（任意位置按快捷键，在代码块中可以跳出代码块另起一行）</span><br><span class="line"></span><br><span class="line">链接：<span class="variable">Ctrl</span><span class="operator">+</span><span class="built_in">K</span>（先复制链接，然后选中要加链接的文本，按快捷键。<span class="variable">Ctrl</span><span class="operator">+</span>左键点击文本可跳转到对应链接）</span><br><span class="line"></span><br><span class="line">取消格式：再次按相同的快捷键即可</span><br><span class="line"></span><br><span class="line">无序列表：<span class="operator">-</span></span><br><span class="line"></span><br><span class="line">有序列表：数字<span class="operator">+</span>点<span class="operator">+</span>空格</span><br><span class="line"></span><br><span class="line">任务列表：加号或减号<span class="operator">+</span>空格</span><br><span class="line"></span><br><span class="line">切换到列表下一行：<span class="built_in">Space</span><span class="operator">+</span><span class="built_in">Enter</span></span><br><span class="line"></span><br><span class="line">嵌套列表：按<span class="built_in">Tab</span>键</span><br><span class="line"></span><br><span class="line">退出列表：按 <span class="variable">Shift</span><span class="operator">+</span><span class="built_in">Tab</span></span><br><span class="line"></span><br><span class="line">插入表格：<span class="variable">Ctrl</span><span class="operator">+</span><span class="variable">T</span></span><br><span class="line"></span><br><span class="line">引用：输入<span class="operator">&gt;</span>后面加空格，或者<span class="variable">Ctrl</span><span class="operator">+</span><span class="variable">Shift</span><span class="operator">+</span><span class="variable">Q</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;  在bilibili刷到程序羊的视频就一时兴起想做个自己的博客，期间遇到了数不清的问题，我一次次地查，一遍遍地尝试，差不多花了3天时间才完全搞好。记录一下整个过程的要点，后续应该还会一直更新~&lt;/p&gt;</summary>
    
    
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
    <category term="markdown" scheme="http://example.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>第一篇Hexo博客</title>
    <link href="http://example.com/2022/01/10/title/"/>
    <id>http://example.com/2022/01/10/title/</id>
    <published>2022-01-10T07:23:19.000Z</published>
    <updated>2022-01-11T13:02:30.167Z</updated>
    
    <content type="html"><![CDATA[<p>菜菜小狗要努力！</p><hr><span id="more"></span><p>就由此开始我的第一篇博客啦！</p><hr>]]></content>
    
    
    <summary type="html">&lt;p&gt;菜菜小狗要努力！&lt;/p&gt;
&lt;hr&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2022/01/10/hello-world/"/>
    <id>http://example.com/2022/01/10/hello-world/</id>
    <published>2022-01-10T04:49:39.770Z</published>
    <updated>2022-01-10T10:52:26.122Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
